{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Header.js","webpack:///./components/Layout.js","webpack:///./components/Menu.js","webpack:///./components/ModalEdit.js","webpack:///./components/Table.js","webpack:///./components/Upload.js","webpack:///./pages/index.js","webpack:///./services/api.js","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardActions\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/Select\"","webpack:///external \"@material-ui/core/Snackbar\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons\"","webpack:///external \"@material-ui/icons/CheckCircleOutline\"","webpack:///external \"@material-ui/icons/CloudUpload\"","webpack:///external \"@material-ui/lab/Alert\"","webpack:///external \"@material-ui/lab/Rating\"","webpack:///external \"moment\"","webpack:///external \"mui-datatables\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-dropzone\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { Toolbar,AppBar,Typography } from '@material-ui/core';\n\nconst headerStyle = {\n  padding: 20,\n  color: \"#FFF\"\n};\nconst imgStyle = {\n  width:'200px',\n  heigth:'200px'\n}\nconst Header = () => (\n\n  <AppBar style={headerStyle} color=\"inherit\" position=\"static\">\n    <Toolbar  >\n      <Typography variant=\"h6\" >\n\n        <img style={imgStyle} src={'/images/logoapp.png'}/>\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;","import Header from './Header';\nimport {Container } from '@material-ui/core';\nimport Head from 'next/head';\n\n\nconst Layout = props => (\n  <Container >\n      <Head>\n        <title>Dashboard</title>\n        <link rel=\"shortcut icon\" href=\"/static/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\n      </Head>\n      <Header />\n      {props.children}\n  </Container>\n);\n\nexport default Layout;","import {Tabs,Tab,Paper} from '@material-ui/core';\n\n\nconst tabsStyle = {\n    marginLeft: '50%',\n}\n\n\nconst Menu = () => (\n    <Paper square>\n        <Tabs value={0}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"disabled tabs example\"\n        >\n            <Tab index={0} styes={tabsStyle} label=\"Home\" />\n\n        </Tabs>\n    </Paper>\n\n);\n\nexport default Menu;","import React,{useState,useEffect}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Avatar, Modal, Fade, Backdrop,Typography,Button,TextField,Grid,CardMedia,CardHeader,InputLabel,MenuItem,InputAdornment} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Rating from '@material-ui/lab/Rating';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {fetcher,update} from '../services/api'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nfunction Capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }, \n  root: {\n        minWidth: 400,\n    },\n  input: {\n        margin:10\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 24,\n    },\n    pos: {\n        marginBottom: 12,\n    },media: {\n        margin:'auto',\n        height: 200,\n        width:200\n    },\n}));\n\nconst styleInput = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n}\nexport default function ModalEdit({open,setOpen,types,item,setUpdateTable}) {\n const classes = useStyles();\n  const [openSnackSuccess, setOpenSnackSuccess] = useState(false);\n  const [openSnackError, setOpenSnackError] = useState(false);\n  const [openSnackRequired, setOpenSnackRequired] = useState(false);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [type, setType] = useState('');\n  const [height, setHeight] = useState('');\n  const [width, setWidth] = useState('');\n  const [price, setPrice] = useState('');\n  const [rating, setRating] = useState(0);\n  const [img, setImg] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorPrice, setErrorPrice] = useState(false);\n\n\n    const checkRequiredFields = async (product) => {\n        if(product.title == ''){\n            setErrorTitle(true);\n            return false;\n        }\n        if(product.price == ''){\n            setErrorPrice(true);\n            return false;\n        }\n        return true;\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseSnackRequired = () => {\n        setOpenSnackRequired(false);\n    };\n    const handleCloseSnackSuccess = () => {\n        setOpenSnackSuccess(false);\n    };\n    const handleCloseSnackError = () => {\n        setOpenSnackError(false);\n    };\n    const saveChanges = async () => {\n        let product = {\n            title,\n            type,\n            description,\n            height,\n            width,\n            price,\n            rating\n        }\n        if(!await checkRequiredFields(product)){\n            setOpenSnackRequired(true);\n            return;\n        }\n\n\n        const response = await update(`/products/${item}`,product)\n        if(response.success){\n            setOpenSnackSuccess(true);\n            setOpen(false);\n            setUpdateTable();\n        }else{\n            setOpenSnackError(true);\n            setOpen(false);\n        }\n    };\n\n\n    function renderTypes(type, index) {\n        return (\n            <MenuItem key={type} value={type}>{Capitalize(type)}</MenuItem>\n        )\n    }\n    async function fetchData() {\n        const response = await fetcher(`/products/${item}`);\n        setTitle(response.title);\n        setImg(response.filename);\n        setDescription(response.description);\n        setType(response.type);\n        setHeight(response.height);\n        setWidth(response.width);\n        setPrice(response.price);\n        setRating(response.rating);\n    }\n    const handleChange = event => {\n        setType(event.target.value);\n    };\n    const handleTitle = event => {\n        if(event.target.value.length > 0 && event.target.value.length < 2)\n            setErrorTitle(false);\n        setTitle(event.target.value);\n    };\n    const handleHeight = event => {\n        setHeight(event.target.value);\n    };\n    const handleWidth = event => {\n        setWidth(event.target.value);\n    };\n    const handlePrice = event => {\n        if(event.target.value.length > 0 && event.target.value.length < 2)\n            setErrorPrice(false);\n        setPrice(event.target.value);\n    };\n    const handleDescription = event => {\n        setDescription(event.target.value);\n    };\n  return (\n   <div>\n\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        onRendered={()=>fetchData() }\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n            <Card className={classes.root}>\n                  <CardHeader title=\"Edit product\" />\n                  <Avatar className={classes.media} src={`/images/${img}`} />\n                <CardContent style={{padding:'30px'}}>\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    error={errorTitle}            \n                                    required\n                                    fullWidth\n                                    autoFocus\n                                    value={title}\n                                    onChange={handleTitle}\n                                    label=\"Title\" \n                                    variant=\"outlined\" />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={2}>\n \n                            <Grid item xs={9}>\n                                <TextField  \n                                    fullWidth \n                                    value={description} \n                                    label=\"Description\" \n                                    variant=\"outlined\" \n                                    onChange={handleDescription}\n                                />\n                            </Grid>\n                           <Grid item  xs>\n                                <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                                <Select labelId=\"demo-simple-select-label\"\n                                    required\n                                    id=\"demo-simple-select\"\n                                    autoWidth={true}\n                                    value={type}\n                                    onChange={handleChange}\n                                    >\n                                    {\n                                        types.map(renderTypes)\n                                    }\n                                </Select>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={2}>\n                            <Grid item xs>\n                            <TextField\n                                label=\"Height\"\n                                value={height}\n                                onChange={handleHeight}\n                                variant=\"outlined\"\n                                type=\"number\"\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <TextField \n                                    value={width} \n                                    onChange={handleWidth} \n                                    label=\"Width\" \n                                    variant=\"outlined\" \n                                    type=\"number\"\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <TextField                                     \n                                    required\n                                    error={errorPrice}            \n                                    fullWidth\n                                    value={price}\n                                    onChange={handlePrice}\n                                    label=\"Price\" \n                                    variant=\"outlined\" \n                                    type=\"number\"\n                                    InputProps={{\n                                        startAdornment: <InputAdornment position=\"start\">U$</InputAdornment>,\n                                    }}\n                                />\n\n                            </Grid>\n\n\n                        </Grid>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Typography style={styleInput} component=\"legend\">Rating</Typography>\n                                <Rating\n                                    style={styleInput}\n                                    name=\"simple-controlled\"\n                                    size = \"large\"\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </form>\n                </CardContent>\n                <CardActions  style={styleInput}>\n                    <Button variant=\"contained\" onClick={()=>setOpen(false)} size=\"large\" color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"contained\"  onClick={()=>saveChanges()} size=\"large\" color=\"primary\">\n                        Confirm changes\n                    </Button>\n           \n                </CardActions>\n            </Card>\n        </Fade>\n      </Modal>\n        <Snackbar open={openSnackSuccess} autoHideDuration={3000} onClose={handleCloseSnackSuccess} >\n            <Alert  severity=\"success\">\n                Sucess! The product was succesfully updated!\n            </Alert>\n        </Snackbar>\n        <Snackbar open={openSnackError} autoHideDuration={3000} onClose={handleCloseSnackError} >\n            <Alert  severity=\"error\">\n                Failed! There was an error when tried to update the product!\n            </Alert>\n        </Snackbar>\n        <Snackbar open={openSnackRequired} autoHideDuration={3000} onClose={handleCloseSnackRequired} >\n            <Alert  severity=\"error\">\n                Check all required fields!\n            </Alert>\n        </Snackbar>     \n    </div>\n  )\n};\n\n","import React, {useEffect,useState} from 'react'\nimport {Button,ButtonGroup,Container,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Snackbar} from '@material-ui/core';\nimport { Delete,Edit } from '@material-ui/icons';\nimport MUIDataTable from \"mui-datatables\";\nimport {MuiThemeProvider } from '@material-ui/core/styles';\nimport ModalEdit from './ModalEdit';\nimport moment from 'moment'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {fetcher,remove} from '../services/api'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst options = {\n  print:false,\n  selectableRows:false,\n  responsive:'stacked'\n};\n \nexport default function TableProducts({updateTable}){\n  const [tableData, setTableData] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [itemSelected, setItemSelected] = useState('');\n  const [openModal, setOpenModal] = useState(false);\n  const [types, setTypes] = useState([]);\n  const [openSnackSuccess, setOpenSnack] = useState(false);\n  const [openSnackError, setOpenSnackError] = useState(false);\n  const [tableUpdate,setTableUpdate] = useState(false);\n      async function handleData(data) {\n        \n        let arr = [];\n        let arrType = [];\n\n        data.forEach(el => {\n          arrType.push(el.type);\n          arr.push([\n            el._id,\n            el.title,\n            el.type,\n            el.rating,\n            el.price,\n            moment(el.createdAt).format('YYYY-MM-DD HH:mm:ss'),\n            el.height,\n            el.width,\n            el.description,\n          ])\n        });\n        setTypes([...new Set(arrType)])\n        return arr;\n      }\n      async function handleUpdateTable(){\n        setTableUpdate(!tableUpdate)\n      };\n      async function confirmDelete(id){\n        setItemSelected(id);\n        setOpenDialog(true);\n      };\n      const handleCloseSnackError = () => {\n        setOpenSnackError(false);\n    };\n      const handleCloseSnackSuccess = () => {\n          setOpenSnack(false);\n      };\n      async function editProduct(id) {\n        setItemSelected(id);\n        setOpenModal(true);\n\n      };\n      async function handleCloseDialog(){\n        setOpenDialog(false);\n      };\n      async function deleteProduct(){\n        const response = await remove(`/products/${itemSelected}`);\n        if(response.success){\n          setOpenSnack(true)\n          handleUpdateTable();\n        }else{\n          setOpenSnackError(true)\n        }\n        setOpenDialog(false);\n      };\n     const columns = [\n\n      {\n        name: \"Id\",\n        options: {\n          display: false,\n          download:false\n        }\n      },\n      {\n        name: \"Title\",\n        options: {\n          filter: true,\n        }\n      },\n      {\n        name: \"Type\",\n        options: {\n          filter: true,\n        }\n      },\n      {\n        name: \"Rating\",\n        options: {\n          filter: true,\n        }\n      },\n      {\n        name: \"Price\",\n        options: {\n          filter: true,\n        }\n      },\n      {\n        name: \"Created\",\n        options: {\n          filter: true,\n          sort: true,\n        }\n      },{\n        name: \"Height\",\n        options: {\n          filter: true,\n          sorte:true,\n          display:false\n        }\n      }, {\n        name: \"Width\",\n        options: {\n          filter: true,\n          sorte:true,\n          display:false\n        }\n      }, {\n        name: \"Description\",\n        options: {\n          filter: true,\n          sort: true,\n          display:false\n        }\n      },\n      {\n        name: \"Action\",\n        options: {\n          filter: false,\n          sort: false,\n          empty: true,\n          download:false,\n          customBodyRender: (value, tableMeta, updateValue) => {\n            return (\n              <ButtonGroup color=\"primary\" aria-label=\"outlined button group\">\n                <Button onClick={() => editProduct(tableMeta.rowData[0])} > <Edit/>Edit</Button>\n                <Button onClick={() => confirmDelete(tableMeta.rowData[0])} color=\"secondary\"><Delete/>Delete</Button>\n              </ButtonGroup>\n\n            );\n          }\n        }\n      },\n    ];\n  async function fetchData() {\n    const response = await fetcher(`/products`);\n    if(response.length > 0)\n      setTableData(await handleData(response));\n  }\n  useEffect(() => {\n      fetchData();\n  }, [updateTable || tableUpdate]);\n\n  // useEffect(() => {\n  //     fetchData();\n  // }, []);\n  return (\n    \n    <Container>\n      <ModalEdit open={openModal} setOpen={setOpenModal} types={types} item={itemSelected} setUpdateTable={handleUpdateTable}/>\n        <MUIDataTable \n          title={\"Products List\"} \n          data={tableData} \n          columns={columns} \n          options={options} \n        />\n\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle >\n         Delete\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this product?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"error\" autoFocus onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"success\" onClick={deleteProduct} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar open={openSnackSuccess} autoHideDuration={3000} onClose={handleCloseSnackSuccess} >\n          <Alert  severity=\"success\">\n              Sucess! The product was succesfully deleted!\n          </Alert>\n      </Snackbar>\n      <Snackbar open={openSnackError} autoHideDuration={3000} onClose={handleCloseSnackError} >\n          <Alert  severity=\"error\">\n              Failed to delete the product!\n          </Alert>\n      </Snackbar>\n    </Container>\n  )\n};\n\n","import React, {useCallback,useState} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {Container,Paper,Button,FormGroup,Backdrop,CircularProgress} from '@material-ui/core';\nimport {useDropzone} from 'react-dropzone'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {post} from '../services/api'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst inputStyle = {\n\n    padding: '100px',\n    cursor: 'pointer'\n\n}\n\nconst styleForm = {\n    padding: '10px',\n    margin: 'auto',\n    alignContent: 'center',\n}\nconst stylePaper = {\n    flex:1,\n    flexDirection: 'row',\n    cursor: 'pointer',\n    padding: '10px',\n    margin: 'auto',\n    alignContent: 'center'\n    \n}\nconst styleInput = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n}\nconst styleBack = {\n    zIndex: 9999,\n    color: '#fff'\n}\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function Upload({updateTable}){\n\n    const [openError, setOpenError] = useState(false);\n    const [openSuccess, setOpenSuccess] = useState(false);\n    const [fileName, setFileName] = useState('');\n    const [contentFile, setContentFile] = useState([]);\n    const [openBackdrop, setOpenBackdrop] = useState(false);\n    const [contentError, setContentError] = useState(\"Failed to upload file!\");\n    const [contentSuccess, setContentSuccess] = useState(\"File upload successfully!\");\n    const classes = useStyles();\n\n    const uploadProducts = async () => {\n        handleToggleBackdrop();\n        let response = await post('/products',contentFile);\n\n        if(response.success){\n            setOpenSuccess(true);\n            updateTable();\n            setContentFile([]);\n        }else{\n            setOpenError(true);\n        }\n        setFileName('');\n        handleCloseBackdrop();\n\n    };\n    const handleCloseBackdrop = () => {\n        setOpenBackdrop(false);\n    };\n    const handleToggleBackdrop = () => {\n        setOpenBackdrop(!openBackdrop);\n    };\n    const handleCloseSuccess = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenSuccess(false);\n    };\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenError(false);\n    };\n    const onDrop = useCallback((acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n            if(file.type != 'application/json'){\n                setContentError(\"Failed to upload file! The selected file is not a JSON!\")\n                setOpenError(true);\n                return;\n            }\n            setFileName(file.name)\n            const reader = new FileReader()\n\n            reader.onabort = () => {\n                setContentError('File reading was aborted!');\n                setOpenError(true);\n            }\n            reader.onerror = () => {\n                setContentError('File reading has failed!');\n                setOpenError(true);\n            }\n            reader.onload = () => {\n                const binaryStr = reader.result;\n                setContentFile(binaryStr);\n            }\n            reader.readAsText(file)\n        })\n\n    }, [])\n    const {getRootProps, getInputProps,isDragActive} = useDropzone({onDrop})\n\n    return (\n            <Container styles={inputStyle}>\n\n                <FormGroup style={styleForm} className=\"App\">\n                            <input\n                    type=\"file\"\n                    name=\"file-5[]\"\n                    id=\"file-5\"\n                    className=\"inputfile inputfile-4\"\n                    hidden\n                />\n                <Paper style={stylePaper} {...getRootProps()}>\n                    <Container style={styleInput}>\n                    <input style={styleInput}{...getInputProps()} />\n                    <CloudUploadIcon  style={{ fontSize: 100}}  color=\"primary\" />\n                    </Container>\n                    {\n                        fileName ?\n                        <Container style={{ fontSize: 20,textAlign:'center'}}>\n                            <CheckCircleOutlineIcon style={{ fontSize: 20,color:'green'}} />  {fileName}\n                        </Container> : \"\"\n                    }\n\n                    <Container>\n                    {\n                        isDragActive ?\n                        <p>Drop the files here ...</p> :\n                        <p>Drag 'n' drop or click to select your JSON file</p>\n                    }\n                    </Container>\n    \n                </Paper>\n                    {\n                        fileName ?\n                        <Container style={{textAlign:'center'}}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                onClick={() => uploadProducts()}\n                                startIcon={<CloudUploadIcon />}\n                            >\n                                Upload\n                            </Button>\n                        </Container>  : \"\"\n                    } \n                </FormGroup>\n\n                <Snackbar open={openError} autoHideDuration={3000} onClose={handleCloseError} >\n                    <Alert  severity=\"error\">\n                        {contentError}\n                    </Alert>\n                </Snackbar>\n\n                <Snackbar open={openSuccess} autoHideDuration={3000} onClose={handleCloseSuccess} >\n                    <Alert  severity=\"success\">\n                        {contentSuccess}\n                    </Alert>\n                </Snackbar>\n                <Backdrop style={styleBack} open={openBackdrop} onClick={handleCloseBackdrop}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </Container>\n\n    )\n\n};\n  \n  \n","\nimport React, {useCallback,useState} from 'react'\nimport Layout from '../components/Layout';\nimport Upload from '../components/Upload';\nimport Menu from '../components/Menu';\nimport TableProducts from '../components/Table';\nimport {Container,Paper} from '@material-ui/core';\n\nconst boxStyle = {\n    margin: 'auto',\n    padding: '30px',\n    marginTop: '30px',\n    width: '50%'\n}\n\n\nexport default function Index() {\n  const [updateTable, setUpdateTable] = useState(false);\n\n  const update = () => {\n      setUpdateTable(true);\n  };\n\n  return (\n    <Layout  >\n        <Container>\n            <Menu/>\n            <Paper style={boxStyle} square>\n              Phasellus et magna nec ipsum maximus scelerisque eget ut dui. Nam feugiat, mi vitae mattis semper, magna augue fermentum massa, ac ultricies eros odio et velit. Proin in enim tempor odio posuere dignissim non at neque. Proin vel ligula pellentesque, gravida eros volutpat, mollis mauris. Sed tincidunt odio odio, sit amet interdum nulla condimentum in.  </Paper>\n            <Upload updateTable={()=>update()}/>\n            <TableProducts updateTable={updateTable}/>\n\n        </Container>\n    </Layout>\n  );\n}","const API_URL = process.env.API_HOST;\n\nconst fetcher = async (path) =>  {\n  try {\n    const res = await fetch(API_URL + path)\n    const json = await res.json();\n    return json;\n  } catch (error) {\n    return error;\n  }\n\n}\nconst post = async (path,data) =>  {\n  try {\n    const rawResponse = await fetch(API_URL + path, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: data\n    });\n    const content = await rawResponse.json();\n    return content;\n  } catch (error) {\n    return error;\n  }\n\n}\nconst update = async (path,data) =>  {\n  try {\n    const rawResponse = await fetch(API_URL + path, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },               mode: 'cors',\n  \n      body: JSON.stringify(data)\n    });\n    const content = await rawResponse.json();\n    return content;\n  } catch (error) {\n    return error;\n  }\n\n}\nconst remove = async (path) =>  {\n  try {\n    const rawResponse = await fetch(API_URL + path, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const content = await rawResponse.json();\n    return content;\n  } catch (error) {\n    return error;\n  }\n\n}\nexport  {fetcher,post,update,remove};","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardActions\");","module.exports = require(\"@material-ui/core/CardContent\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"@material-ui/core/Snackbar\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons\");","module.exports = require(\"@material-ui/icons/CheckCircleOutline\");","module.exports = require(\"@material-ui/icons/CloudUpload\");","module.exports = require(\"@material-ui/lab/Alert\");","module.exports = require(\"@material-ui/lab/Rating\");","module.exports = require(\"moment\");","module.exports = require(\"mui-datatables\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-dropzone\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;AClBA;AAGA;AACA;AADA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAEA;AACA;AACA;AACA;AAHA;AA5BA;AAmaaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAbA;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","sourceRoot":""}