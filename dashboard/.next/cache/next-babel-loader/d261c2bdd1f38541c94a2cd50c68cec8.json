{"ast":null,"code":"var _jsxFileName = \"/home/tcostaz1/Documentos/DEV/fullstack-challenge-06/dashboard/components/ModalEdit.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Fade, Backdrop, Paper, Typography, Button, TextField, FormGroup, FormControlLabel, Grid, CardMedia, CardHeader, Box, InputLabel, MenuItem } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport fetcher from '../services/api';\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nfunction Capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  root: {\n    minWidth: 400\n  },\n  input: {\n    margin: 10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 24\n  },\n  pos: {\n    marginBottom: 12\n  },\n  media: {\n    margin: 'auto',\n    height: 240,\n    width: 200\n  }\n}));\nconst styleInput = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nexport default function ModalEdit({\n  open,\n  setOpen,\n  types,\n  item\n}) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const {\n    0: openSnackSuccess,\n    1: setOpenSnack\n  } = useState(false);\n  const {\n    0: product,\n    1: setProduct\n  } = useState({});\n  const {\n    0: contentError,\n    1: setContentError\n  } = useState(\"Failed to upload file!\");\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: type,\n    1: setType\n  } = useState('');\n  const {\n    0: height,\n    1: setHeight\n  } = useState('');\n  const {\n    0: width,\n    1: setWidth\n  } = useState('');\n  const {\n    0: price,\n    1: setPrice\n  } = useState('');\n  const {\n    0: rating,\n    1: setRating\n  } = useState(0);\n\n  const handleOpenSnack = () => {\n    setOpenSnack(true);\n  };\n\n  const handleClose = () => {\n    console.log(\"types\", types);\n    setOpen(false);\n  };\n\n  const handleCloseSnackSuccess = () => {\n    console.log(\"types\", types);\n    setOpenSnack(false);\n  };\n\n  const saveChanges = () => {\n    let product = {\n      title,\n      type,\n      description,\n      height,\n      width,\n      price,\n      rating\n    };\n    console.log(\"producto\", product);\n    handleOpenSnack();\n    setOpen(false);\n  };\n\n  function renderTypes(type, index) {\n    return __jsx(MenuItem, {\n      value: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, Capitalize(type));\n  }\n\n  async function fetchData() {\n    const response = await fetcher(`/products/${item}`);\n    console.log(response); // setProduct(response)\n\n    setTitle(response.title);\n    setDescription(response.description);\n    setType(response.type);\n    setHeight(response.height);\n    setWidth(response.width);\n    setPrice(response.price);\n    setRating(response.rating);\n  }\n\n  const handleChange = event => {\n    setType(event.target.value);\n  };\n\n  const handleTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleHeight = event => {\n    setHeight(event.target.value);\n  };\n\n  const handleWidth = event => {\n    setWidth(event.target.value);\n  };\n\n  const handlePrice = event => {\n    setPrice(event.target.value);\n  };\n\n  const handleDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Modal, {\n    \"aria-labelledby\": \"spring-modal-title\",\n    \"aria-describedby\": \"spring-modal-description\",\n    className: classes.modal,\n    open: open,\n    onRendered: () => fetchData(),\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Fade, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(CardHeader, {\n    title: \"Edit product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), __jsx(CardMedia, {\n    className: classes.media,\n    image: \"/images/10.jpg\",\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), __jsx(CardContent, {\n    style: {\n      padding: '30px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    autoFocus: true,\n    value: title,\n    onChange: handleTitle,\n    label: \"Title\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    value: description,\n    label: \"Description\",\n    variant: \"outlined\",\n    onChange: handleDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Type\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    required: true,\n    id: \"demo-simple-select\",\n    autoWidth: true,\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"None\")), types.map(renderTypes)))), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"Height\",\n    value: height,\n    onChange: handleHeight,\n    variant: \"outlined\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(TextField, {\n    value: width,\n    onChange: handleWidth,\n    label: \"Width\",\n    variant: \"outlined\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    value: price,\n    onChange: handlePrice,\n    label: \"Price\",\n    variant: \"outlined\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, __jsx(Typography, {\n    style: styleInput,\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Rating\"), __jsx(Rating, {\n    style: styleInput,\n    name: \"simple-controlled\",\n    size: \"large\",\n    value: rating,\n    onChange: (event, newValue) => {\n      setRating(newValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }))))), __jsx(CardActions, {\n    style: styleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    onClick: () => setOpen(false),\n    size: \"large\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Cancel\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: () => saveChanges(),\n    size: \"large\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Confirm changes\"))))), __jsx(Snackbar, {\n    open: openSnackSuccess,\n    autoHideDuration: 3000,\n    onClose: handleCloseSnackSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, __jsx(Alert, {\n    severity: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Sucess! The product was succesfully updated!\")));\n}\n;","map":{"version":3,"sources":["/home/tcostaz1/Documentos/DEV/fullstack-challenge-06/dashboard/components/ModalEdit.js"],"names":["React","useState","useEffect","PropTypes","makeStyles","Modal","Fade","Backdrop","Paper","Typography","Button","TextField","FormGroup","FormControlLabel","Grid","CardMedia","CardHeader","Box","InputLabel","MenuItem","Card","CardActions","CardContent","Rating","StarBorderIcon","Select","Snackbar","MuiAlert","fetcher","Alert","props","Capitalize","str","charAt","toUpperCase","slice","useStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","minWidth","input","margin","bullet","transform","title","fontSize","pos","marginBottom","media","height","width","styleInput","ModalEdit","open","setOpen","types","item","classes","openSnackSuccess","setOpenSnack","product","setProduct","contentError","setContentError","setTitle","description","setDescription","type","setType","setHeight","setWidth","price","setPrice","rating","setRating","handleOpenSnack","handleClose","console","log","handleCloseSnackSuccess","saveChanges","renderTypes","index","fetchData","response","handleChange","event","target","value","handleTitle","handleHeight","handleWidth","handlePrice","handleDescription","timeout","map","newValue"],"mappings":"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","sourcesContent":["import React,{useState,useEffect}from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Fade, Backdrop,Paper,Typography,Button,TextField,FormGroup,FormControlLabel,Grid,CardMedia,CardHeader,Box,InputLabel,MenuItem} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport fetcher from '../services/api'\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction Capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }, \n  root: {\n        minWidth: 400,\n    },\n  input: {\n        margin:10\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 24,\n    },\n    pos: {\n        marginBottom: 12,\n    },media: {\n        margin:'auto',\n        height: 240,\n        width:200\n    },\n}));\n\nconst styleInput = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n}\nexport default function ModalEdit({open,setOpen,types,item}) {\n const classes = useStyles();\n // getModalStyle is not a pure function, we roll the style only on the first render\n  const [openSnackSuccess, setOpenSnack] = useState(false);\n  const [product, setProduct] = useState({});\n  const [contentError, setContentError] = useState(\"Failed to upload file!\");\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [type, setType] = useState('');\n  const [height, setHeight] = useState('');\n  const [width, setWidth] = useState('');\n  const [price, setPrice] = useState('');\n  const [rating, setRating] = useState(0);\n\n    const handleOpenSnack = () => {\n        setOpenSnack(true);\n    };\n\n    const handleClose = () => {\n        console.log(\"types\",types)\n        setOpen(false);\n    };\n    const handleCloseSnackSuccess = () => {\n        console.log(\"types\",types)\n        setOpenSnack(false);\n    };\n\n    const saveChanges = () => {\n        let product = {\n            title,\n            type,\n            description,\n            height,\n            width,\n            price,\n            rating\n        }\n        console.log(\"producto\",product)\n        handleOpenSnack()\n        setOpen(false);\n    };\n\n\n    function renderTypes(type, index) {\n        return (\n            <MenuItem value={type}>{Capitalize(type)}</MenuItem>\n        )\n    }\n    async function fetchData() {\n        const response = await fetcher(`/products/${item}`);\n        console.log(response)\n        // setProduct(response)\n        setTitle(response.title);\n        setDescription(response.description);\n        setType(response.type);\n        setHeight(response.height);\n        setWidth(response.width);\n        setPrice(response.price);\n        setRating(response.rating);\n    }\n    const handleChange = event => {\n        setType(event.target.value);\n    };\n    const handleTitle = event => {\n        setTitle(event.target.value);\n    };\n    const handleHeight = event => {\n        setHeight(event.target.value);\n    };\n    const handleWidth = event => {\n        setWidth(event.target.value);\n    };\n    const handlePrice = event => {\n        setPrice(event.target.value);\n    };\n    const handleDescription = event => {\n        setDescription(event.target.value);\n    };\n  return (\n   <div>\n\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        onRendered={()=>fetchData() }\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n            <Card className={classes.root}>\n                  <CardHeader title=\"Edit product\" />\n                <CardMedia\n                    className={classes.media}\n                    image=\"/images/10.jpg\"\n                    title=\"Contemplative Reptile\"\n                    />\n                <CardContent style={{padding:'30px'}}>\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField                 \n                                    required\n                                    fullWidth\n                                    autoFocus\n                                    value={title}\n                                    onChange={handleTitle}\n                                    label=\"Title\" \n                                    variant=\"outlined\" />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={2}>\n \n                            <Grid item xs={9}>\n                                <TextField  \n                                    fullWidth \n                                    value={description} \n                                    label=\"Description\" \n                                    variant=\"outlined\" \n                                    onChange={handleDescription}\n                                />\n                            </Grid>\n                           <Grid item  xs>\n                                <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                                <Select labelId=\"demo-simple-select-label\"\n                                    required\n                                    id=\"demo-simple-select\"\n                                    autoWidth={true}\n                                    value={type}\n                                    onChange={handleChange}\n                                    >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {\n                                        types.map(renderTypes)\n                                    }\n                                </Select>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={2}>\n                            <Grid item xs>\n                            <TextField\n                                label=\"Height\"\n                                value={height}\n                                onChange={handleHeight}\n                                variant=\"outlined\"\n                                type=\"number\"\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <TextField \n                                    value={width} \n                                    onChange={handleWidth} \n                                    label=\"Width\" \n                                    variant=\"outlined\" \n                                    type=\"number\"\n                                />\n                            </Grid>\n                            <Grid item xs>\n                                <TextField                                     \n                                    required\n                                    fullWidth\n                                    value={price}\n                                    onChange={handlePrice}\n                                    label=\"Price\" \n                                    variant=\"outlined\" \n                                    type=\"number\"\n                                />\n\n                            </Grid>\n\n\n                        </Grid>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Typography style={styleInput} component=\"legend\">Rating</Typography>\n                                <Rating\n                                    style={styleInput}\n                                    name=\"simple-controlled\"\n                                    size = \"large\"\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </form>\n                </CardContent>\n                <CardActions  style={styleInput}>\n                    <Button variant=\"contained\" onClick={()=>setOpen(false)} size=\"large\" color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"contained\"  onClick={()=>saveChanges()} size=\"large\" color=\"primary\">\n                        Confirm changes\n                    </Button>\n           \n                </CardActions>\n            </Card>\n        </Fade>\n      </Modal>\n        <Snackbar open={openSnackSuccess} autoHideDuration={3000} onClose={handleCloseSnackSuccess} >\n            <Alert  severity=\"success\">\n                Sucess! The product was succesfully updated!\n            </Alert>\n        </Snackbar>\n        {/* <Snackbar open={openSnackSuccess} autoHideDuration={3000} onClose={handleCloseSnackSuccess} >\n            <Alert  severity=\"error\">\n                Failed! There was an error \n            </Alert>\n        </Snackbar> */}\n    </div>\n  )\n};\n\n"]},"metadata":{},"sourceType":"module"}