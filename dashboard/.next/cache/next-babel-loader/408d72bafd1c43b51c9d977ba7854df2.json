{"ast":null,"code":"var _jsxFileName = \"/home/tcostaz1/Documentos/DEV/fullstack-challenge-06/dashboard/components/Upload.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Container, Paper, Button, InputBase, FormGroup, Backdrop, CircularProgress } from '@material-ui/core';\nimport { useDropzone } from 'react-dropzone';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { post } from '../services/api';\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}\n\nconst inputStyle = {\n  padding: '100px',\n  cursor: 'pointer'\n};\nconst styleForm = {\n  padding: '10px',\n  margin: 'auto',\n  alignContent: 'center'\n};\nconst stylePaper = {\n  flex: 1,\n  flexDirection: 'row',\n  cursor: 'pointer',\n  padding: '10px',\n  margin: 'auto',\n  alignContent: 'center'\n};\nconst styleInput = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nconst styleBack = {\n  zIndex: 9999,\n  color: '#fff'\n};\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function Upload() {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState('');\n  const {\n    0: contentFile,\n    1: setContentFile\n  } = useState([]);\n  const {\n    0: openBackdrop,\n    1: setOpenBackdrop\n  } = useState(false);\n  const {\n    0: contentError,\n    1: setContentError\n  } = useState(\"Failed to upload file!\");\n  const classes = useStyles();\n\n  const uploadProducts = async products => {\n    handleToggleBackdrop();\n    let response = await post('/products', contentFile);\n    console.log(response);\n  };\n\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      if (file.type != 'application/json') {\n        setContentError(\"Failed to upload file! The selected file is not a JSON!\");\n        setOpen(true);\n        return;\n      }\n\n      console.log(file);\n      setFileName(file.name);\n      const reader = new FileReader();\n\n      reader.onabort = () => {\n        setContentError('File reading was aborted!');\n        setOpen(true);\n      };\n\n      reader.onerror = () => {\n        setContentError('File reading has failed!');\n        setOpen(true);\n      };\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n        setContentFile(binaryStr);\n      };\n\n      reader.readAsText(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    styles: inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(FormGroup, {\n    style: styleForm,\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file-5[]\",\n    id: \"file-5\",\n    className: \"inputfile inputfile-4\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(Paper, _extends({\n    style: stylePaper\n  }, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), __jsx(Container, {\n    style: styleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(\"input\", _extends({\n    style: styleInput\n  }, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), __jsx(CloudUploadIcon, {\n    style: {\n      fontSize: 100\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), fileName ? __jsx(Container, {\n    style: {\n      fontSize: 20,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(CheckCircleOutlineIcon, {\n    style: {\n      fontSize: 20,\n      color: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), \"  \", fileName) : \"\", __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, isDragActive ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Drop the files here ...\") : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Drag 'n' drop or click to select your JSON file\"))), fileName ? __jsx(Container, {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => uploadProducts(),\n    startIcon: __jsx(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Upload\")) : \"\"), __jsx(Snackbar, {\n    open: open,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(Alert, {\n    severity: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, contentError))), __jsx(Backdrop, {\n    style: styleBack,\n    open: openBackdrop,\n    onClick: handleCloseBackdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })));\n}\n;","map":{"version":3,"sources":["/home/tcostaz1/Documentos/DEV/fullstack-challenge-06/dashboard/components/Upload.js"],"names":["React","useCallback","useState","Snackbar","Container","Paper","Button","InputBase","FormGroup","Backdrop","CircularProgress","useDropzone","CloudUploadIcon","CheckCircleOutlineIcon","MuiAlert","makeStyles","post","Alert","props","inputStyle","padding","cursor","styleForm","margin","alignContent","stylePaper","flex","flexDirection","styleInput","display","alignItems","justifyContent","styleBack","zIndex","color","useStyles","theme","button","spacing","Upload","open","setOpen","fileName","setFileName","contentFile","setContentFile","openBackdrop","setOpenBackdrop","contentError","setContentError","classes","uploadProducts","products","handleToggleBackdrop","response","console","log","handleCloseBackdrop","handleClose","event","reason","onDrop","acceptedFiles","forEach","file","type","name","reader","FileReader","onabort","onerror","onload","binaryStr","result","readAsText","getRootProps","getInputProps","isDragActive","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, {useCallback,useState} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {Container,Paper,Button,InputBase,FormGroup,Backdrop,CircularProgress} from '@material-ui/core';\nimport {useDropzone} from 'react-dropzone'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {post} from '../services/api'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst inputStyle = {\n\n    padding: '100px',\n    cursor: 'pointer'\n\n}\n\nconst styleForm = {\n    padding: '10px',\n    margin: 'auto',\n    alignContent: 'center',\n}\nconst stylePaper = {\n    flex:1,\n    flexDirection: 'row',\n    cursor: 'pointer',\n    padding: '10px',\n    margin: 'auto',\n    alignContent: 'center'\n    \n}\nconst styleInput = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n}\nconst styleBack = {\n    zIndex: 9999,\n    color: '#fff'\n}\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function Upload() {\n\n  const [open, setOpen] = useState(false);\n  const [fileName, setFileName] = useState('');\n  const [contentFile, setContentFile] = useState([]);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n  const [contentError, setContentError] = useState(\"Failed to upload file!\");\n  const classes = useStyles();\n\n\n\n    const uploadProducts = async (products) => {\n        handleToggleBackdrop();\n        let response = await post('/products',contentFile);\n        console.log(response)\n    };\n    const handleCloseBackdrop = () => {\n        setOpenBackdrop(false);\n    };\n    const handleToggleBackdrop = () => {\n        setOpenBackdrop(!openBackdrop);\n    };\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n  const onDrop = useCallback((acceptedFiles) => {\n      acceptedFiles.forEach((file) => {\n          if(file.type != 'application/json'){\n            setContentError(\"Failed to upload file! The selected file is not a JSON!\")\n            setOpen(true);\n            return;\n          }\n          console.log(file)\n          setFileName(file.name)\n          const reader = new FileReader()\n\n          reader.onabort = () => {\n            setContentError('File reading was aborted!');\n            setOpen(true);\n          }\n          reader.onerror = () => {\n              setContentError('File reading has failed!');\n              setOpen(true);\n          }\n          reader.onload = () => {\n              // Do whatever you want with the file contents\n              const binaryStr = reader.result\n              console.log(binaryStr)\n              setContentFile(binaryStr);\n\n          }\n          reader.readAsText(file)\n      })\n\n  }, [])\n  const {getRootProps, getInputProps,isDragActive} = useDropzone({onDrop})\n\n    return (\n        <>\n            <Container styles={inputStyle}>\n\n                <FormGroup style={styleForm} className=\"App\">\n                            <input\n                    type=\"file\"\n                    name=\"file-5[]\"\n                    id=\"file-5\"\n                    className=\"inputfile inputfile-4\"\n                    hidden\n                />\n                <Paper style={stylePaper} {...getRootProps()}>\n                    <Container style={styleInput}>\n                    <input style={styleInput}{...getInputProps()} />\n                    <CloudUploadIcon  style={{ fontSize: 100}}  color=\"primary\" />\n                    </Container>\n                    {\n                        fileName ?\n                        <Container style={{ fontSize: 20,textAlign:'center'}}>\n                            <CheckCircleOutlineIcon style={{ fontSize: 20,color:'green'}} />  {fileName}\n                        </Container> : \"\"\n                    }\n\n                    <Container>\n                    {\n                        isDragActive ?\n                        <p>Drop the files here ...</p> :\n                        <p>Drag 'n' drop or click to select your JSON file</p>\n                    }\n                    </Container>\n    \n\n                </Paper>\n                    {\n                        fileName ?\n                        <Container style={{textAlign:'center'}}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                onClick={()=> uploadProducts()}\n                                startIcon={<CloudUploadIcon />}\n                            >\n                                Upload\n                            </Button>\n                        </Container>  : \"\"\n                    } \n                </FormGroup>\n\n                <Snackbar open={open} autoHideDuration={3000} onClose={handleClose} >\n                    <Alert  severity=\"error\">\n                        {contentError}\n                    </Alert>\n                </Snackbar>\n\n            </Container>\n            <Backdrop style={styleBack} open={openBackdrop} onClick={handleCloseBackdrop}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </>\n    )\n\n};\n  \n  \n"]},"metadata":{},"sourceType":"module"}