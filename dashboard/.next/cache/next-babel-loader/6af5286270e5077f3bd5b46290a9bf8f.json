{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar API_URL = 'http://api:3001';\n\nvar fetcher = function fetcher(path) {\n  var res, json;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(API_URL);\n          console.log(API_HOST);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(API_URL + path));\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 12]]);\n};\n\nvar post = function post(path, data) {\n  var rawResponse, content;\n  return _regeneratorRuntime.async(function post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(API_URL + path, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: data\n          }));\n\n        case 3:\n          rawResponse = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(rawResponse.json());\n\n        case 6:\n          content = _context2.sent;\n          return _context2.abrupt(\"return\", content);\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", _context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nvar update = function update(path, data) {\n  var rawResponse, content;\n  return _regeneratorRuntime.async(function update$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(API_URL + path, {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            body: _JSON$stringify(data)\n          }));\n\n        case 3:\n          rawResponse = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(rawResponse.json());\n\n        case 6:\n          content = _context3.sent;\n          return _context3.abrupt(\"return\", content);\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", _context3.t0);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nvar remove = function remove(path) {\n  var rawResponse, content;\n  return _regeneratorRuntime.async(function remove$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(API_URL + path, {\n            method: 'DELETE',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }));\n\n        case 3:\n          rawResponse = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(rawResponse.json());\n\n        case 6:\n          content = _context4.sent;\n          return _context4.abrupt(\"return\", content);\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", _context4.t0);\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexport { fetcher, post, update, remove };","map":{"version":3,"sources":["/usr/src/dashboard/services/api.js"],"names":["API_URL","fetcher","path","console","log","API_HOST","fetch","res","json","post","data","method","headers","body","rawResponse","content","update","mode","remove"],"mappings":";;AAAA,IAAMA,OAAO,GAAG,iBAAhB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAFc;AAAA;AAAA,2CAIMC,KAAK,CAACN,OAAO,GAAGE,IAAX,CAJX;;AAAA;AAINK,UAAAA,GAJM;AAAA;AAAA,2CAKOA,GAAG,CAACC,IAAJ,EALP;;AAAA;AAKNA,UAAAA,IALM;AAAA,2CAMLA,IANK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAYA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAOP,IAAP,EAAYQ,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEiBJ,KAAK,CAACN,OAAO,GAAGE,IAAX,EAAiB;AAC9CS,YAAAA,MAAM,EAAE,MADsC;AAE9CC,YAAAA,OAAO,EAAE;AACP,wBAAU,kBADH;AAEP,8BAAgB;AAFT,aAFqC;AAM9CC,YAAAA,IAAI,EAAEH;AANwC,WAAjB,CAFtB;;AAAA;AAEHI,UAAAA,WAFG;AAAA;AAAA,2CAUaA,WAAW,CAACN,IAAZ,EAVb;;AAAA;AAUHO,UAAAA,OAVG;AAAA,4CAWFA,OAXE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAiBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAOd,IAAP,EAAYQ,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEeJ,KAAK,CAACN,OAAO,GAAGE,IAAX,EAAiB;AAC9CS,YAAAA,MAAM,EAAE,KADsC;AAE9CC,YAAAA,OAAO,EAAE;AACP,wBAAU,kBADH;AAEP,8BAAgB;AAFT,aAFqC;AAK7BK,YAAAA,IAAI,EAAE,MALuB;AAO9CJ,YAAAA,IAAI,EAAE,gBAAeH,IAAf;AAPwC,WAAjB,CAFpB;;AAAA;AAELI,UAAAA,WAFK;AAAA;AAAA,2CAWWA,WAAW,CAACN,IAAZ,EAXX;;AAAA;AAWLO,UAAAA,OAXK;AAAA,4CAYJA,OAZI;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAkBA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAOhB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEeI,KAAK,CAACN,OAAO,GAAGE,IAAX,EAAiB;AAC9CS,YAAAA,MAAM,EAAE,QADsC;AAE9CC,YAAAA,OAAO,EAAE;AACP,wBAAU,kBADH;AAEP,8BAAgB;AAFT;AAFqC,WAAjB,CAFpB;;AAAA;AAELE,UAAAA,WAFK;AAAA;AAAA,2CASWA,WAAW,CAACN,IAAZ,EATX;;AAAA;AASLO,UAAAA,OATK;AAAA,4CAUJA,OAVI;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAgBA,SAASd,OAAT,EAAiBQ,IAAjB,EAAsBO,MAAtB,EAA6BE,MAA7B","sourcesContent":["const API_URL = 'http://api:3001'\n\nconst fetcher = async (path) =>  {\n  console.log(API_URL);\n  console.log(API_HOST)\n  try {\n    const res = await fetch(API_URL + path)\n    const json = await res.json();\n    return json;\n  } catch (error) {\n    return error;\n  }\n\n}\nconst post = async (path,data) =>  {\n  try {\n    const rawResponse = await fetch(API_URL + path, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: data\n    });\n    const content = await rawResponse.json();\n    return content;\n  } catch (error) {\n    return error;\n  }\n\n}\nconst update = async (path,data) =>  {\n  try {\n    const rawResponse = await fetch(API_URL + path, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },               mode: 'cors',\n  \n      body: JSON.stringify(data)\n    });\n    const content = await rawResponse.json();\n    return content;\n  } catch (error) {\n    return error;\n  }\n\n}\nconst remove = async (path) =>  {\n  try {\n    const rawResponse = await fetch(API_URL + path, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const content = await rawResponse.json();\n    return content;\n  } catch (error) {\n    return error;\n  }\n\n}\nexport  {fetcher,post,update,remove};"]},"metadata":{},"sourceType":"module"}